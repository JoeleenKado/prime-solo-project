{"version":3,"sources":["redux/reducers/errors.reducer.js","redux/reducers/user.reducer.js","redux/reducers/users.reducer.js","redux/reducers/art.reducer.js","redux/reducers/friendArt.reducer.js","redux/reducers/artic.reducer.js","redux/reducers/frame.reducer.js","redux/reducers/friendly.reducer.js","redux/reducers/_root.reducer.js","redux/sagas/login.saga.js","redux/sagas/registration.saga.js","redux/sagas/user.saga.js","redux/sagas/art.saga.js","redux/sagas/artic.saga.js","redux/sagas/frame.saga.js","redux/sagas/settings.saga.js","redux/sagas/_root.saga.js","redux/services/action.service.js","redux/mapStoreToProps.js","components/Nav/Nav.js","components/Footer/Footer.js","pages/LoginPage/LoginForm.js","pages/LoginPage/LoginPage.js","components/ProtectedRoute/ProtectedRoute.js","pages/Program/Program.js","pages/Settings/PasswordForm.js","pages/Settings/Settings.js","pages/RegisterPage/RegisterForm.js","pages/RegisterPage/RegisterPage.js","pages/Gallery/Caption.js","pages/Gallery/Art.js","pages/Gallery/Gallery.js","pages/FriendGallery/FriendGallery.js","pages/Studio/Form.js","pages/Studio/Studio.js","pages/Forum/Forum.js","pages/Edit/Edit.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","userReducer","payload","usersReducer","artReducer","friendArtReducer","console","log","articReducer","frameReducer","friendlyReducer","rootReducer","errors","user","users","art","friendArt","artic","frame","friendly","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","response","status","takeLatest","registerUser","registrationSaga","fetchUser","fetchUsers","userSaga","get","data","artSaga","like","fetchArtSaga","fetchFriendArtSaga","addArtSaga","updateArtSaga","deleteArtSaga","id","delete","articSaga","fetchRandomSaga","res","randomArt","frameSaga","fetchFrameSaga","addFrameSaga","updatePassword","settings","rootSaga","all","ActionService","Component","fetchArt","mapStoreToProps","reduxState","store","connect","props","loginLinkData","path","text","to","className","onClick","dispatch","class","aria-hidden","Footer","useState","username","setUsername","password","setPassword","onSubmit","event","preventDefault","length","role","htmlFor","name","required","value","onChange","e","target","image_id","title","artist_display","caption","setCaption","useEffect","toggleCaption","ARTISTS","NATIONALITIES","ret","replace","moreRet","doIt","artist","i","includes","retFunction","src","alt","history","push","ComponentToProtect","component","authRedirect","otherProps","ComponentToShow","LoginPage","exact","from","AboutPage","Settings","RegisterPage","cancelRegistration","this","render","artwork","size","medium","statement","url","encodedUrl","encodeURIComponent","Object","filter","obj","predicate","keys","key","reduce","assign","filtered","item","filteredArtwork","forEach","slice","content","nextElementSibling","style","maxHeight","scrollHeight","toggleAccordion","likeFunction","likeSorted","sort","a","b","Event","currentTarget","map","dimensions","match","params","client","filestack","process","setTitle","setStatement","setMedium","setSize","setUrl","url300","options","onFileUploadFinished","file","Promise","resolve","reject","reason","useDispatch","user_id","falseButtonStyle","label","backgroundColor","addArt","onBlur","rows","maxLength","onBlue","picker","open","heading","decodedUrl","decodeURIComponent","setUrlEdit","urlEdit","titleEdit","setTitleEdit","sizeEdit","setSizeEdit","mediumEdit","setMediumEdit","statementEdit","setStatementEdit","update","property","edit","placeholder","Program","Gallery","Forum","Studio","require","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fe5d5127.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = \"\", action) => {\n  switch (action.type) {\n    case \"CLEAR_LOGIN_ERROR\":\n      return \"\";\n    case \"LOGIN_INPUT_ERROR\":\n      return \"Enter your username and password!\";\n    case \"LOGIN_FAILED\":\n      return \"Oops! The username and password didn't match. Try again!\";\n    case \"LOGIN_FAILED_NO_CODE\":\n      return \"Oops! Something went wrong! Is the server running?\";\n    case \"PASSWORD_INPUT_ERROR\":\n      return \"You must enter a password to proceed.\";\n\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = \"\", action) => {\n  switch (action.type) {\n    case \"CLEAR_REGISTRATION_ERROR\":\n      return \"\";\n    case \"REGISTRATION_INPUT_ERROR\":\n      return \"Choose a username and password!\";\n    case \"REGISTRATION_FAILED\":\n      return \"Oops! That didn't work. The username might already be taken. Try again!\";\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return action.payload;\n    case \"UNSET_USER\":\n      return {};\n    default:\n      return state;\n  }\n};\nexport default userReducer;\n","const usersReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"SET_USERS\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default usersReducer;\n","const artReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_ART\":\n      return action.payload;\n    case \"RESET_ART\":\n      return [];\n    default:\n      return state;\n  }\n};\nexport default artReducer;\n","const friendArtReducer = (state = [], action) => {\n  console.log(\"(3)in friendArtReducer\");\n  switch (action.type) {\n    case \"SET_FRIEND_ART\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default friendArtReducer;\n","const articReducer = (state = [], action) => {\n  console.log(\"in articReducer\");\n  switch (action.type) {\n    case \"SET_ARTIC\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport default articReducer;\n","const frameReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_FRAME\":\n      return action.payload;\n    case \"RESET_FRAME\":\n      return [];\n    default:\n      return state;\n  }\n};\nexport default frameReducer;\n","const friendlyReducer = (state = false, action) => {\n  console.log(\"(3)in friendlyReducer\");\n  switch (action.type) {\n    case \"SET_FRIENDLY\":\n      return true;\n    case \"UNSET_FRIENDLY\":\n      return false;\n    default:\n      return state;\n  }\n};\nexport default friendlyReducer;\n","import { combineReducers } from \"redux\";\nimport errors from \"./errors.reducer\";\nimport user from \"./user.reducer\";\nimport users from \"./users.reducer\";\nimport art from \"./art.reducer\";\nimport friendArt from \"./friendArt.reducer\";\nimport artic from \"./artic.reducer\";\nimport frame from \"./frame.reducer\";\nimport friendly from \"./friendly.reducer\";\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  user, // will have an id and username if someone is logged in\n  users,\n  art,\n  friendArt,\n  artic,\n  frame,\n  friendly,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: \"CLEAR_LOGIN_ERROR\" });\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post(\"/api/user/login\", action.payload, config);\n    // after the user has logged in\n    // get the user information from the server\n    yield put({ type: \"FETCH_USER\" });\n  } catch (error) {\n    console.log(\"Error with user login:\", error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: \"LOGIN_FAILED\" });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: \"LOGIN_FAILED_NO_CODE\" });\n    }\n  }\n}\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post(\"/api/user/logout\", config);\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: \"UNSET_USER\" });\n  } catch (error) {\n    console.log(\"Error with user logout:\", error);\n  }\n}\nfunction* loginSaga() {\n  yield takeLatest(\"LOGIN\", loginUser);\n  yield takeLatest(\"LOGOUT\", logoutUser);\n}\nexport default loginSaga;\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: \"CLEAR_REGISTRATION_ERROR\" });\n    // passes the username and password from the payload to the server\n    yield axios.post(\"/api/user/register\", action.payload);\n    // automatically log a user in after registration\n    yield put({ type: \"LOGIN\", payload: action.payload });\n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({ type: \"SET_TO_LOGIN_MODE\" });\n  } catch (error) {\n    console.log(\"Error with user registration:\", error);\n    yield put({ type: \"REGISTRATION_FAILED\" });\n  }\n}\nfunction* registrationSaga() {\n  yield takeLatest(\"REGISTER\", registerUser);\n}\nexport default registrationSaga;\n","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\n\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get(\"/api/user\", config);\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: \"SET_USER\", payload: response.data });\n  } catch (error) {\n    console.log(\"User get request failed\", error);\n  }\n}\nfunction* fetchUsers() {\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get(\"/api/users\", config);\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: \"SET_USERS\", payload: response.data });\n  } catch (error) {\n    console.log(\"User get request failed\", error);\n  }\n}\nfunction* userSaga() {\n  yield takeLatest(\"FETCH_USER\", fetchUser);\n  yield takeLatest(\"FETCH_USERS\", fetchUsers);\n}\nexport default userSaga;\n","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\n\nfunction* artSaga() {\n  yield takeLatest(\"FETCH_ART\", fetchArtSaga);\n  yield takeLatest(\"FETCH_FRIEND_ART\", fetchFriendArtSaga);\n  yield takeLatest(\"LIKE\", like);\n  yield takeLatest(\"ADD_ART\", addArtSaga);\n  yield takeLatest(\"UPDATE_ART\", updateArtSaga);\n  yield takeLatest(\"DELETE_ART\", deleteArtSaga);\n}\nfunction* like(action) {\n  const id = action.payload;\n  console.log(\"In like*()...\");\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.put(`api/art/like/${action.payload}`, config);\n    console.log(\"response from put like:\", response);\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nfunction* fetchArtSaga() {\n  yield put({ type: \"UNSET_FRIENDLY\" });\n  console.log(\"In fetchArtSaga...\");\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.get(\"api/art\", config);\n    yield put({ type: \"SET_ART\", payload: response.data });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nfunction* fetchFriendArtSaga(action) {\n  console.log(\"(1)In fetchFriendArtSaga...\");\n  const id = action.payload;\n  console.log(\"(2)artist:\", id);\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.get(`api/art/${id}`, config);\n    yield put({ type: \"SET_FRIEND_ART\", payload: response.data });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n  yield put({ type: \"SET_FRIENDLY\" });\n}\nfunction* addArtSaga(action) {\n  console.log(\"In addArtSaga...\");\n  console.log(\"payload:\", action.payload);\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.post(\"api/art\", action.payload, config);\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nfunction* updateArtSaga(action) {\n  console.log(\"In updateArtSaga...\");\n  console.log(\"payload:\", action.payload);\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.put(\"api/art\", action.payload, config);\n    yield put({ type: \"FETCH_ART\" });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nfunction* deleteArtSaga(action) {\n  console.log(\"In deleteArtSaga...\");\n  console.log(\"payload:\", action.payload);\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.delete(`api/art/${action.payload}`, config);\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\n\n// function* fetchDetailsSaga(action) {\n//   console.log(\"In fetchDetailsSaga...\");\n//   console.log(\"payload:\", action.payload);\n\n//   try {\n//     const config = {\n//       headers: { \"Content-Type\": \"application/json\" },\n//       withCredentials: true,\n//     };\n\n//     const response = yield axios.get(`api/art/${action.payload}`, config);\n\n//     yield put({ type: \"SET_ART\", payload: response.data });\n//   } catch (error) {\n//     console.log(\"Art get request failed\", error);\n//   }\n// }\nexport default artSaga;\n","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\n\nfunction* articSaga() {\n  yield takeLatest(\"FETCH_RANDOM\", fetchRandomSaga);\n}\nfunction* fetchRandomSaga() {\n  console.log(\"In fetchRandomSaga...\");\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const res = yield axios.get(\"api/artic\", config);\n    const randomArt = res.data;\n    console.log(\"randomArt:\", randomArt);\n    yield put({ type: \"SET_ARTIC\", payload: randomArt });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nexport default articSaga;\n","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\n\nfunction* frameSaga() {\n  yield takeLatest(\"FETCH_FRAME\", fetchFrameSaga);\n  yield takeLatest(\"FETCH_FRIEND_ART\", fetchFriendArtSaga);\n  yield takeLatest(\"ADD_FRAME\", addFrameSaga);\n  yield takeLatest(\"UPDATE_ART\", updateArtSaga);\n  yield takeLatest(\"DELETE_ART\", deleteArtSaga);\n}\n\nfunction* fetchFrameSaga() {\n  console.log(\"In fetchFrameSaga...\");\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.get(\"api/workshop\", config);\n    yield put({ type: \"SET_FRAME\", payload: response.data });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nfunction* fetchFriendArtSaga(action) {\n  console.log(\"(1)In fetchFriendArtSaga...\");\n  const id = action.payload;\n  console.log(\"(2)artist:\", id);\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.get(`api/art/${id}`, config);\n    yield put({ type: \"SET_FRIEND_ART\", payload: response.data });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nfunction* addFrameSaga(action) {\n  console.log(\"In addFrameSaga...\");\n  console.log(\"payload:\", action.payload);\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.post(\"api/workshop\", action.payload, config);\n    yield put({ type: \"FETCH_FRAME\" });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nfunction* updateArtSaga(action) {\n  console.log(\"In updateArtSaga...\");\n  console.log(\"payload:\", action.payload);\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.put(\"api/art\", action.payload, config);\n    yield put({ type: \"FETCH_ART\" });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nfunction* deleteArtSaga(action) {\n  console.log(\"In deleteArtSaga...\");\n  console.log(\"payload:\", action.payload);\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.delete(`api/art/${action.payload}`, config);\n    yield put({ type: \"FETCH_ART\" });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nexport default frameSaga;\n","import { put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction* updatePassword(action) {\n  console.log(\"In updatePassword*()...\");\n  console.log(\"payload:\", action.payload);\n  try {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n      withCredentials: true,\n    };\n    const response = yield axios.put(\n      \"api/settings/password/\",\n      action.payload,\n      config\n    );\n    yield put({ type: \"FETCH_ART\" });\n  } catch (error) {\n    console.log(\"Art get request failed\", error);\n  }\n}\nfunction* settings() {\n  yield takeLatest(\"UPDATE_PASSWORD\", updatePassword);\n}\nexport default settings;\n","import { all } from \"redux-saga/effects\";\nimport loginSaga from \"./login.saga\";\nimport registrationSaga from \"./registration.saga\";\nimport userSaga from \"./user.saga\";\nimport artSaga from \"./art.saga\";\nimport articSaga from \"./artic.saga\";\nimport frameSaga from \"./frame.saga\";\nimport settings from \"./settings.saga\";\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(), // login saga is now registered\n    registrationSaga(),\n    userSaga(),\n    artSaga(),\n    articSaga(),\n    frameSaga(),\n    settings(),\n  ]);\n}\n","import { Component } from \"react\";\nclass ActionService extends Component {\n  fetchArt() {\n    return { type: \"FETCH_ART\" };\n  }\n  fetchUser() {\n    return { type: \"FETCH_USER\" };\n  }\n} //END ActionService\nexport default new ActionService(\"\");\n","const mapStoreToProps = (reduxState) => {\n  return {\n    // reduxState properties bound to \"props.store\"\n    store: reduxState,\n  };\n};\n\nexport default mapStoreToProps;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./Nav.css\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nconst Nav = (props) => {\n  let loginLinkData = {\n    path: \"/login\",\n    text: \"Login / Register\",\n  };\n  if (props.store.user.id != null) {\n    loginLinkData.path = \"\";\n    loginLinkData.text = \"Logout\";\n  }\n  return (\n    <Router>\n      <ul id=\"nav-ul\">\n        <li>\n          <Link to=\"/home\" className=\"nav-link\">\n            <span id=\"home-icon\">Virtual Gallery</span>\n          </Link>\n        </li>\n        <li>\n          <Link\n            className=\"nav-link\"\n            to={loginLinkData.path}\n            onClick={\n              loginLinkData.path !== \"\"\n                ? null\n                : () => props.dispatch({ type: \"LOGOUT\" })\n            }\n          >\n            <i class=\"fa-solid fa-door-open\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{loginLinkData.text}</span>\n          </Link>\n        </li>\n        <li>\n          <Link className=\"nav-link\" to=\"/program\">\n            <i class=\"fa-solid fa-solid fa-book-open\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">Program</span>\n          </Link>\n        </li>\n        {props.store.user.id && (\n          <>\n            <li>\n              <Link className=\"nav-link\" to=\"/studio\">\n                <i class=\"fa-solid fa-palette\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">Studio</span>\n              </Link>\n            </li>\n            <li>\n              <Link className=\"nav-link\" to=\"/forum\">\n                <i class=\"fa-solid fa-users\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">Forum</span>\n              </Link>\n            </li>\n          </>\n        )}\n      </ul>\n    </Router>\n  ); //END return\n}; //END Nav\nexport default connect(mapStoreToProps)(Nav);\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => <footer>&copy; Joeleen Kado 2022</footer>;\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport \"./LoginPage.css\";\n\nconst LoginForm = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function login(event) {\n    event.preventDefault();\n    if (username.length && password.length) {\n      props.dispatch({\n        type: \"LOGIN\",\n        payload: {\n          username: username,\n          password: password,\n        },\n      });\n    } else {\n      props.dispatch({ type: \"LOGIN_INPUT_ERROR\" });\n    }\n  }\n  return (\n    <span id=\"login-span\">\n      <h3>Returning User:</h3>\n      <form className=\"form-panel\" onSubmit={login}>\n        {props.store.errors.loginMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {props.store.errors.loginMessage}\n          </h3>\n        )}\n        <label htmlFor=\"username\">\n          Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"input\"\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </label>\n        <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Log In\" />\n      </form>\n    </span>\n  );\n}; //END LoginForm\nexport default connect(mapStoreToProps)(LoginForm);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport LoginForm from \"./LoginForm\";\nimport \"./LoginPage.css\";\n\nconst LoginPage = (props) => {\n  const { artic } = props.store;\n  const { image_id, title, artist_display } = artic;\n  const [caption, setCaption] = useState(true);\n  useEffect(() => {\n    props.dispatch({ type: \"FETCH_RANDOM\" });\n  }, []);\n  const toggleCaption = () => setCaption(!caption);\n  const ARTISTS = [\"Gauguin\", \"Picasso\", \"Gogh\", \"Matisse\", \"C\\xE9zanne\"];\n  const NATIONALITIES = [\"\\nFrench\", \"\\nDutch\", \"\\nSpanish\"];\n\n  if (artist_display) {\n    const ret = artist_display.replace(NATIONALITIES, \"\");\n    console.log(\"ret:\", ret);\n    function retFunction() {\n      for (let i = 0; i < ARTISTS.length; i++) {\n        if (ret.includes(ARTISTS[i])) {\n          console.log(\"hooray\");\n          return doIt(ARTISTS[i]);\n        }\n      }\n      return console.log(\"finished\");\n    }\n    let moreRet;\n    function doIt(artist) {\n      moreRet = ret.replace(artist, `${artist};`);\n      return console.log(\"moreRet:\", moreRet);\n    }\n    console.log(\"retFunction():\", retFunction());\n    return (\n      <section id=\"login-section\">\n        {!image_id ? (\n          <p>Loading Artwork...</p>\n        ) : (\n          <div id=\"master-figure-container\">\n            <figure id=\"master-figure\">\n              <img\n                id=\"master-image\"\n                src={`https://www.artic.edu/iiif/2/${image_id}/full/843,/0/default.jpg`}\n                alt=\"random artwork\"\n                onClick={toggleCaption}\n              />\n              <figcaption className={caption ? \"\" : \"hide\"}>\n                <address id=\"master-caption\">\n                  <span id=\"caption-span\">\n                    <h4>{title}</h4>\n                    <p>{moreRet}</p>\n                  </span>\n                </address>\n              </figcaption>\n            </figure>\n          </div>\n        )}\n        <LoginForm />\n        <span id=\"new-user-span\">\n          <h3>New User:</h3>\n          <button\n            type=\"button\"\n            id=\"go-to-register\"\n            onClick={(e) => {\n              e.preventDefault();\n              props.history.push(`/registration`);\n            }}\n          >\n            Register\n          </button>\n        </span>\n      </section>\n    );\n  } else {\n    return <h1>Loading...</h1>;\n  }\n};\nexport default connect(mapStoreToProps)(LoginPage);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LoginPage from \"../../pages/LoginPage/LoginPage\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    // redirect path to be used if the user is authorized\n    authRedirect,\n    store,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if (store.user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  }\n\n  // redirect a logged in user if an authRedirect prop has been provided\n  if (store.user.id && authRedirect != null) {\n    return <Redirect exact from={otherProps.path} to={authRedirect} />;\n  } else if (!store.user.id && authRedirect != null) {\n    ComponentToShow = ComponentToProtect;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n    <Route\n      // all props like 'exact' and 'path' that were passed in\n      // are now passed along to the 'Route' Component\n      {...otherProps}\n      component={ComponentToShow}\n    />\n  );\n};\n\nexport default connect(mapStoreToProps)(ProtectedRoute);\n","import React from \"react\";\nimport \"./Program.css\";\n\nconst AboutPage = () => (\n  <article id=\"program\">\n    <h2>Welcome to Virtual Gallery</h2>\n    <p>\n      -If you are an artist, I invite you to share your art with the world. Once\n      you have registered as an artist, you can start publishing art in your\n      Studio. Your published work is immediately viewable in your Gallery. Head\n      over to the Forum to see work done by other artists.\n    </p>\n    <p>\n      - If you are a guest, please enjoy the complimentary art, on loan from the\n      Art Institue of Chicago. you may regiseter for an account and head to the\n      forum for Art viewing.\n    </p>\n    <p>\n      - Virtual Gallery also trains you as an artist. We help you see your\n      strengths and weaknesses with our Like System. Your most popular work will\n      be the first work viewable my others visiting your gallery. The end result\n      is that VG advocates your best work and helps you see where you can use\n      work.\n    </p>\n  </article>\n);\nexport default AboutPage;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\n\nconst PasswordForm = (props) => {\n  const [username, setUsername] = useState(props.store.user.username);\n  const [password, setPassword] = useState(\"\");\n  function updatePassword(event) {\n    event.preventDefault();\n    if (password.length) {\n      props.dispatch({\n        type: \"UPDATE_PASSWORD\",\n        payload: {\n          username: username,\n          password: password,\n        },\n      });\n    } else {\n      props.dispatch({ type: \"PASSWORD_INPUT_ERROR\" });\n    }\n  }\n  return (\n    <form className=\"formPanel\" onSubmit={updatePassword}>\n      <h1>Login</h1>\n      {props.store.errors.loginMessage && (\n        <h3 className=\"alert\" role=\"alert\">\n          {props.store.errors.loginMessage}\n        </h3>\n      )}\n      <div>\n        <label htmlFor=\"New Password\">\n          New Password:\n          <input\n            type=\"text\"\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"input\"\n          />\n        </label>\n      </div>\n      <div>\n        <input\n          className=\"btn\"\n          type=\"submit\"\n          name=\"submit\"\n          value=\"Change Password\"\n        />\n      </div>\n    </form>\n  );\n}; //END PasswordForm\nexport default connect(mapStoreToProps)(PasswordForm);\n","import PasswordForm from \"./PasswordForm\";\nimport React from \"react\";\n\nconst Settings = () => {\n  return <PasswordForm />;\n}; //END Settings\nexport default Settings;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\n\nconst RegisterForm = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  function register(event) {\n    event.preventDefault();\n    if (username.length && password.length) {\n      props.dispatch({\n        type: \"REGISTER\",\n        payload: {\n          username: username,\n          password: password,\n        },\n      });\n    } else {\n      props.dispatch({ type: \"REGISTRATION_INPUT_ERROR\" });\n    }\n  }\n  return (\n    <span id=\"login-span\">\n      <h3>New User:</h3>\n      <form className=\"form-panel\" onSubmit={register}>\n        {props.store.errors.loginMessage && (\n          <h3 className=\"alert\" role=\"alert\">\n            {props.store.errors.loginMessage}\n          </h3>\n        )}\n        <label htmlFor=\"username\">\n          Username:\n          <input\n            type=\"text\"\n            name=\"username\"\n            required\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"input\"\n          />\n        </label>\n        <label htmlFor=\"password\">\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            required\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </label>\n        <input className=\"btn\" type=\"submit\" name=\"submit\" value=\"Register\" />\n      </form>\n    </span>\n  );\n}; //END RegisterForm\nexport default connect(mapStoreToProps)(RegisterForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport AboutPage from \"../Program/Program\";\nimport RegisterForm from \"./RegisterForm\";\nimport \"./Register.css\";\n\nclass RegisterPage extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n  };\n  cancelRegistration = () => {\n    this.props.history.push(\"/login\");\n  };\n  render() {\n    return (\n      <section id=\"register-section\">\n        <AboutPage />\n        <RegisterForm cancelRegistration={this.cancelRegistration} />\n        <span id=\"new-user-span\">\n          <h3>Returning User:</h3>\n          <button\n            type=\"button\"\n            id=\"go-to-register\"\n            onClick={(e) => {\n              e.preventDefault();\n              this.props.history.push(`/login`);\n            }}\n          >\n            Login\n          </button>\n        </span>\n      </section>\n    );\n  }\n} //END RegisterPage\nexport default connect(mapStoreToProps)(RegisterPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport \"./Gallery.css\";\n\nconst Caption = (props) => {\n  const { history, artwork, store } = props;\n  const { title, size, medium, id, statement, url, like } = artwork;\n  const { friendly } = store;\n  const encodedUrl = encodeURIComponent(url);\n  Object.filter = (obj, predicate) =>\n    Object.keys(obj)\n      .filter((key) => predicate(obj[key]))\n      .reduce((res, key) => Object.assign(res, { [key]: obj[key] }), {});\n\n  const filtered = Object.filter(artwork, (item) => item === \"\");\n  function filter(obj) {\n    Object.keys(obj).forEach(function (key) {\n      obj[key] = \"NA\";\n    });\n    return Object.assign(artwork, filtered);\n  }\n  const filteredArtwork = filter(filtered);\n  console.log(\"1st half of url:\", url.slice(0, 32));\n  console.log(\"2nd half of url:\", url.slice(32));\n  console.log(\"encodedURL:\", encodedUrl);\n  console.log(\"filteredArtwork.size:\", filteredArtwork.size);\n  function likeFunction(e) {\n    e.preventDefault();\n    props.dispatch({ type: \"LIKE\", payload: id });\n  }\n  function toggleAccordion(e) {\n    const content = e.target.nextElementSibling;\n    if (content.style.maxHeight) {\n      content.style.maxHeight = null;\n    } else {\n      content.style.maxHeight = content.scrollHeight + \"px\";\n    }\n    // console.log(\"target:\", e.target);\n    // console.log(\"content:\", content);\n    // let element = document.getElementsByClassName(\"flip-card-inner\");\n    // console.log(\"element:\", element);\n  }\n  return (\n    <>\n      <div className=\"stone\">\n        <label\n          id=\"text-plate\"\n          className=\"accordion\"\n          onClick={(e) => toggleAccordion(e)}\n        >\n          {title}\n        </label>\n        <div className=\"accordion-content\">\n          <article>\n            {friendly ? null : (\n              <>\n                {like} Like(s)!\n                <br />\n              </>\n            )}\n            {medium}\n            <br />\n            {size}\n            <br />\n            <p>{statement}</p>\n            {props.store.friendly ? (\n              <button onClick={(e) => likeFunction(e)}>Like</button>\n            ) : (\n              <button\n                onClick={() =>\n                  history.push(\n                    `edit/${filteredArtwork.title}/${filteredArtwork.medium}/${filteredArtwork.size}/${filteredArtwork.statement}/${encodedUrl}/${id}`\n                  )\n                }\n              >\n                EDIT\n              </button>\n            )}\n          </article>\n        </div>\n      </div>\n    </>\n  ); //END return\n}; //END Caption\nexport default connect(mapStoreToProps)(Caption);\n","import React from \"react\";\nimport \"./Gallery.css\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport Caption from \"./Caption\";\n\nfunction Art(props) {\n  const \n    { artwork, history } = props,\n    { artist, title, statement, size, medium, url, id } = artwork;\n\n  const encodedUrl = encodeURIComponent(url);\n  return (\n    <>\n      <li>\n        <img src={url} alt=\"artwork\" />\n        <Caption artwork={artwork} history={history} />\n      </li>\n    </>\n  ); //END return\n} //END Art\nexport default connect(mapStoreToProps)(Art);\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport \"./Gallery.css\";\nimport Art from \"./Art\";\n\nfunction Gallery(props) {\n  const { friendly } = props.store;\n  const { art } = props.store;\n  useEffect(() => {\n    props.dispatch({ type: \"FETCH_ART\" });\n  }, []);\n  console.log(\"art:\", art);\n  const likeSorted = art.sort(function (a, b) {\n    return b.like - a.like;\n  });\n  console.log(\"e:\", Event.currentTarget);\n  return (\n    <center>\n      <section id=\"gallery-section\">\n      <h3 className=\"tip\">Click a titleplate for more information.</h3>\n\n\n        {!art.length && !friendly ? (\n          <h1>\n            You have not yet created art. head over to the Studio to get started\n          </h1>\n        ) : (\n          <ul>\n            {likeSorted.map((artwork) => {\n              const {\n                artist,\n                title,\n                statement,\n                dimensions,\n                medium,\n                url,\n              } = artwork;\n              return (\n                <>\n                  <Art history={props.history} artwork={artwork} />\n                </>\n              );\n            })}\n          </ul>\n        )}\n      </section>\n    </center>\n  );\n} //END Gallery\nexport default connect(mapStoreToProps)(Gallery);\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport \"./FriendGallery.css\";\nimport Art from \"../Gallery/Art\";\n\nfunction FriendGallery(props) {\n  const { username, id } = props.match.params;\n  const { friendly, friendArt } = props.store;\n  useEffect(() => {\n    props.dispatch({ type: \"FETCH_FRIEND_ART\", payload: id });\n  }, []);\n  console.log(\"friendArt:\", friendArt);\n  const likeSorted = friendArt.sort(function (a, b) {\n    return b.like - a.like;\n  });\n  return (\n    <center>\n      <section id=\"gallery-section\">\n        <h2>{props.match.params.username}'s Gallery</h2>\n        <h3 className=\"tip\">Click a titleplate for more information.</h3>\n\n        {!friendArt.length ? (\n          <h1>This artist has not yet created art</h1>\n        ) : (\n          <ul>\n            {!friendly\n              ? null\n              : likeSorted.map((artwork) => {\n                  const {\n                    artist,\n                    title,\n                    statement,\n                    dimensions,\n                    medium,\n                    url,\n                  } = artwork;\n                  return (\n                    <>\n                      <Art history={props.history} artwork={artwork} />\n                    </>\n                  );\n                })}\n          </ul>\n        )}\n      </section>\n    </center>\n  ); //END return\n} //END FriendGallery\nexport default connect(mapStoreToProps)(FriendGallery);\n","import React, { useState } from \"react\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport { connect, useDispatch } from \"react-redux\";\nimport * as filestack from \"filestack-js\";\nimport \"./Studio.css\";\n\nfunction Form(props) {\n  const key = process.env.REACT_APP_FILESTACK_API_KEY;\n  const client = filestack.init(key);\n  const [title, setTitle] = useState(\"\");\n  const [statement, setStatement] = useState(\"\");\n  const [medium, setMedium] = useState(\"\");\n  const [size, setSize] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const resize = \"/resize=width:300,height:200\";\n  let url300;\n  const options = {\n    onFileUploadFinished(file) {\n      return new Promise((resolve, reject) => {\n        resolve(\n          console.log(\"resolved\", file),\n          (url300 = file.url.slice(0, 32) + resize + file.url.slice(32)),\n          console.log(\"url300:\", url300),\n          setUrl(url300)\n        );\n        reject((reason) => console.log(\"Rejected:\", reason));\n      });\n    },\n  };\n  const dispatch = useDispatch();\n  const art = {\n    user_id: props.store.user.id,\n    title: title,\n    statement: statement,\n    medium: medium,\n    size: size,\n    url: url,\n    like: 0,\n  };\n  async function addArt() {\n    console.log(`Sending ${art.title} to Database...`);\n    dispatch({ type: \"ADD_ART\", payload: art });\n    setTitle(\"\");\n    setMedium(\"\");\n    setSize(\"\");\n    setStatement(\"\");\n    setUrl(\"\");\n  }\n  const falseButtonStyle = (label) => {\n    if (!label.length) {\n      return { backgroundColor: \"yellow\" };\n    } else {\n      return { backgroundColor: \"green\" };\n    }\n  };\n  return (\n    <span id=\"publish-span\">\n      <h3>Publish an Artwork</h3>\n      <form\n        id=\"art-form\"\n        name=\"art\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          addArt();\n        }}\n      >\n        <button className=\"false-button\" style={falseButtonStyle(title)}>\n          Title\n        </button>\n        <input\n          id=\"title-input\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          onBlur={(e) => setTitle(e.target.value)}\n        />\n        <br/>\n        <button style={falseButtonStyle(medium)} className=\"false-button\">\n          Medium\n        </button>\n        <input\n          value={medium}\n          onChange={(e) => setMedium(e.target.value)}\n          onBlur={(e) => setMedium(e.target.value)}\n        />\n        <br />\n        <button style={falseButtonStyle(size)} className=\"false-button\">\n          Size\n        </button>\n        <input\n          value={size}\n          onChange={(e) => setSize(e.target.value)}\n          onBlur={(e) => setSize(e.target.value)}\n        />\n        <br />\n        <textarea\n          className=\"statement\"\n          rows=\"4\"\n          maxLength=\"300\"\n          value={statement}\n          onChange={(e) => setStatement(e.target.value)}\n          onBlue={(e) => setStatement(e.target.value)}\n        />\n        <br />\n        <button\n          style={falseButtonStyle(statement)}\n          className=\"false-button\"\n          id=\"statement-button\"\n        >\n          Statement\n        </button>\n        <br />\n        <button\n          style={falseButtonStyle(url)}\n          id=\"upload-img-btn\"\n          onClick={(e) => {\n            e.preventDefault();\n            client.picker(options).open();\n          }}\n        >\n          UPLOAD IMAGE\n        </button>\n        <br />\n        {!url.length ? null : (\n          <>\n            <img src={url} alt=\"artwork\" />\n            <br />\n          </>\n        )}\n        {!url.length ? null : <button id=\"submit-art-button\">SUBMIT</button>}\n      </form>\n    </span>\n  ); //END return\n} //END ArtForm\nexport default connect(mapStoreToProps)(Form);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport Form from \"./Form\";\n\nfunction Studio() {\n  return (\n    <section id=\"studio-section\">\n      <Form />\n      <br />\n    </section>\n  );\n} //END Studio\nexport default connect(mapStoreToProps)(Studio);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport \"./Forum.css\";\n\nfunction Forum(props) {\n  const { users } = props.store;\n  const [heading, setHeading] = useState(\"Other Artists:\");\n  useEffect(() => {\n    props.dispatch({ type: \"FETCH_USERS\" });\n  }, []);\n  return (\n    <span id=\"friend-span\">\n      <h3>{heading}</h3>\n      <ul>\n        {!users.length ? (\n          <h1>Loading Artists...</h1>\n        ) : (\n          users.map((user) => {\n            const { username, id } = user;\n            return (\n              <li\n                onClick={(e) => {\n                  e.preventDefault();\n                  props.history.push(`/gallery/${username}/${id}`);\n                }}\n              >\n                {username}\n              </li>\n            );\n          })\n        )}\n      </ul>\n    </span>\n  ); //END return\n} //END Forum\nexport default connect(mapStoreToProps)(Forum);\n","import { useState } from \"react\";\nimport React from \"react\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport { connect } from \"react-redux\";\nimport * as filestack from \"filestack-js\";\nimport \"./Edit.css\";\n\nfunction Edit(props) {\n  const { art } = props.store;\n  const { title, statement, size, medium, url, id } = props.match.params;\n  const decodedUrl = decodeURIComponent(url);\n  console.log(\"Our url has been decoded:\", decodedUrl);\n  console.log(\"size:\", size);\n  const key = process.env.REACT_APP_FILESTACK_API_KEY;\n  const client = filestack.init(key);\n  const resize = \"/resize=width:300,height:200\";\n  let url300;\n  const options = {\n    onFileUploadFinished(file) {\n      return new Promise((resolve, reject) => {\n        resolve(\n          console.log(\"resolved\", file),\n          (url300 = file.url.slice(0, 32) + resize + file.url.slice(32)),\n          setUrlEdit(url300)\n        );\n        reject((reason) => console.log(\"Rejected:\", reason));\n      });\n    },\n  };\n  const [urlEdit, setUrlEdit] = useState(decodedUrl);\n  const [titleEdit, setTitleEdit] = useState(title);\n  const [sizeEdit, setSizeEdit] = useState(size);\n  const [mediumEdit, setMediumEdit] = useState(medium);\n  const [statementEdit, setStatementEdit] = useState(statement);\n  function update(property, edit) {\n    props.dispatch({\n      type: \"UPDATE_ART\",\n      payload: { [property]: edit, id: id },\n    });\n  }\n  return (\n    <>\n      <form id=\"edit-form\">\n        <input\n          htmlFor=\"Title Edit\"\n          placeholder={title}\n          value={titleEdit}\n          onChange={(e) => setTitleEdit(e.target.value)}\n          onBlur={(e) => setTitleEdit(e.target.value)}\n        ></input>\n        <button onClick={(e) => update(\"title\", titleEdit)}>\n          UPDATE TITLE\n        </button>\n        <br />\n        <input\n          htmlFor=\"Medium\"\n          placeholder={mediumEdit}\n          value={mediumEdit}\n          onChange={(e) => setMediumEdit(e.target.value)}\n          onBlur={(e) => setMediumEdit(e.target.value)}\n          value={mediumEdit}\n        />\n        <button\n          onClick={(e) => {\n            e.preventDefault();\n            update(\"medium\", mediumEdit);\n          }}\n        >\n          UPDATE MEDIUM\n        </button>\n        <br />\n        <input\n          htmlFor=\"Size\"\n          onChange={(e) => setSizeEdit(e.target.value)}\n          onBlur={(e) => setSizeEdit(e.target.value)}\n          value={sizeEdit}\n          placeholder={sizeEdit}\n        />\n        <button onClick={(e) => update(\"size\", sizeEdit)}>UPDATE SIZE</button>\n        <br />\n        <textarea\n          id=\"edit-statement\"\n          htmlFor=\"Statement Edit\"\n          rows=\"5\"\n          maxLength=\"300\"\n          placeholder={statementEdit}\n          value={statementEdit}\n          onChange={(e) => {\n            setStatementEdit(e.target.value);\n            console.log(\"statement has changed:\", statementEdit);\n          }}\n          onBlur={(e) => setStatementEdit(e.target.value)}\n        />\n        <br />\n        <button\n          id=\"update-statement-btn\"\n          onClick={(e) => update(\"statement\", statementEdit)}\n        >\n          UPDATE STATEMENT\n        </button>\n        <br />\n        <button\n          htmlFor=\"Upload Image\"\n          onClick={(e) => {\n            e.preventDefault();\n            client.picker(options).open();\n          }}\n        >\n          UPLOAD IMAGE\n        </button>\n        <img src={urlEdit} />\n        <button\n          htmlFor=\"Update Image\"\n          onClick={(e) => {\n            e.preventDefault();\n            update(\"url\", urlEdit);\n          }}\n        >\n          UPDATE IMAGE\n        </button>\n        <br />\n        <button\n          id=\"delete-btn\"\n          onClick={(e) => {\n            e.preventDefault();\n            props.dispatch({ type: \"DELETE_ART\", payload: id });\n            props.history.push(\"/gallery\");\n          }}\n        >\n          DELETE ARTWORK\n        </button>\n      </form>\n    </>\n  ); //END return ()\n} //END Edit\nexport default connect(mapStoreToProps)(Edit);\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport action from \"../../redux/services/action.service\";\nimport { connect } from \"react-redux\";\nimport Nav from \"../Nav/Nav\";\nimport Footer from \"../Footer/Footer\";\nimport ProtectedRoute from \"../ProtectedRoute/ProtectedRoute\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport Program from \"../../pages/Program/Program\";\nimport LoginPage from \"../../pages/LoginPage/LoginPage\";\nimport Settings from \"../../pages/Settings/Settings\";\nimport RegisterPage from \"../../pages/RegisterPage/RegisterPage\";\nimport Gallery from \"../../pages/Gallery/Gallery\";\nimport FriendGallery from \"../../pages/FriendGallery/FriendGallery\";\nimport Studio from \"../../pages/Studio/Studio\";\nimport Forum from \"../../pages/Forum/Forum\";\nimport Edit from \"../../pages/Edit/Edit\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(action.fetchUser());\n  }, {});\n  return (\n    <>\n      <header>\n        <nav>\n          <Nav id=\"nav\" />\n        </nav>\n      </header>\n      <div className=\"color-bar\"></div>\n      <Router>\n        <Switch>\n          {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n          <Redirect exact from=\"/\" to=\"/home\" />\n          <Route exact path=\"/program\" component={Program} />\n          <ProtectedRoute\n            path=\"/gallery/:username/:id\"\n            render={(props) => <FriendGallery {...props} />}\n          />\n          <ProtectedRoute\n            path=\"/edit/:title/:medium/:size/:statement/:url/:id\"\n            render={(props) => <Edit {...props} />}\n          />\n          <ProtectedRoute\n            path=\"/settings\"\n            render={(props) => <Settings {...props} />}\n          />\n          <ProtectedRoute\n            path=\"/edit/:title/:medium/:size/:statement/:url/:id\"\n            render={(props) => <Edit {...props} />}\n          />\n          {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/user will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the LoginPage (component).\n            Even though it seems like they are different pages, the user is always on localhost:3000/user */}\n          <ProtectedRoute\n            props={props}\n            exact\n            path=\"/gallery\"\n            component={Gallery}\n          />\n          <ProtectedRoute exact path=\"/forum\" component={Forum} />\n          <ProtectedRoute exact path=\"/studio\" component={Studio} />\n          {/* When a value is supplied for the authRedirect prop the user will\n            be redirected to the path supplied when logged in, otherwise they will\n            be taken to the component and path supplied. */}\n          <ProtectedRoute\n            // with authRedirect:\n            // - if logged in, redirects to \"/user\"\n            // - else shows LoginPage at /login\n            exact\n            path=\"/login\"\n            component={LoginPage}\n            authRedirect=\"/gallery\"\n          />\n          <ProtectedRoute\n            exact\n            path=\"/registration\"\n            component={RegisterPage}\n            authRedirect=\"/gallery\"\n          />\n          <ProtectedRoute\n            exact\n            path=\"/home\"\n            component={LoginPage}\n            authRedirect=\"/gallery\"\n          />\n          {/* If none of the other routes matched, we will show a 404. */}\n          <Route render={() => <h1>404</h1>} />\n        </Switch>\n      </Router>\n      <footer>\n        <Footer />\n      </footer>\n    </>\n  ); //END return\n} //END App\nexport default connect(mapStoreToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./redux/reducers/_root.reducer\"; // imports ./redux/reducers/index.js\nimport rootSaga from \"./redux/sagas/_root.saga\"; // imports ./redux/sagas/index.js\nimport App from \"./components/App/App\";\nrequire(\"dotenv\").config();\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList =\n  process.env.NODE_ENV === \"development\"\n    ? [sagaMiddleware, logger]\n    : [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList)\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"react-root\")\n);\n"],"sourceRoot":""}